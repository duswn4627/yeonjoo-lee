<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.OrderManagerMapper">
	<!-- 주문상태일때 주문취소 (( 바로 취소시킴 )) -->
	<update id="orderCancel" parameterType="hashmap">
		update bpayment set 
		bstatus=
		<choose>
				<when test="bstatus==0">6</when>
				<otherwise>4</otherwise>
		</choose>
		where bpaynum=#{bpaynum}	
	</update>
	<!-- 전체취소시 새책수량복구를 위해 테이블에서 현재수량을 구해옴. -->
	<select id="commonCount" parameterType="hashmap" resultType="int">
		select bcount from books where bnum=#{bnum}
	</select>
	<!-- 수량복구.. -->
	<update id="returnBookCount" parameterType="hashmap">
		update books set bcount=#{bcount} where bnum=#{bnum}
	</update>
	
	<!-- 사용포인트량 구함. -->
	<select id="getUsedpoint" parameterType="hashmap" resultType="int">
		select usedpoint from bpayment where bpaynum=#{bpaynum}
	</select>
	
	<!-- 사용포인트가 있다면 사용한포인트 다시 돌려줌. -->
	<insert id="returnPoint" parameterType="hashmap">
		insert into point from values(#{mnum},#{bpaynum},#{point},sysdate)
	</insert>
	<!-- 주문에 해당하는 책들 리스트가져옴 -->
	<select id="getpaymentbook" parameterType="hashmap" resultType="BookVo">
		select bnum,bcount from paymentbook where bpaynum=#{bpaynum}
	</select>	
	
	<select id="getbcount" parameterType="hashmap" resultType="int">
		select bcount from paymentbook where btype=1 and bnum=#{bnum} and bpaynum=#{bpaynum}
	</select>
	
	<select id="getpaymentbooknum" parameterType="hashmap" resultType="int">
		select paymentbook_num from paymentbook where bpaynum=#{bpaynum} and bnum=#{bnum}
	</select>
	
	<!-- 반품신청 -->
	<insert id="inputrefund" parameterType="hashmap">
		insert into refundhistory values(1,sysdate,null,
		<choose>
			<when test="apply=='cancel'">
				1
			</when>
			<when test="apply=='return'">
				2
			</when>
			<otherwise> <!-- 교환.. -->
				3
			</otherwise>
		</choose>
		,#{paymentbooknum},#{bcount})
	</insert>
	<!-- 중고상품 취소 클릭시 다시 상태 0번으로 변경 -->
	<update id="cancelmold" parameterType="hashmap">
		update oldbooks set obsalestatus=0 where obnum in (select bnum obnum from paymentbook where bpaynum=#{bpaynum})
	</update>
	<!-- 중고상품 구매확정 클릭시 판매상태 변경. -->
	<update id="confirmold" parameterType="hashmap">
		update oldbooks set obsalestatus=3 where obnum in (select bnum obnum from paymentbook where bpaynum=#{bpaynum})
	</update>
	<!-- 중고상품 구매확정클릭시 bpayment 상태변경 -->
	<update id="confirmBpayment" parameterType="hashmap">
		update bpayment set bstatus=3 where bpaynum=#{bpaynum}
	</update>
	<select id="getoldbooks" parameterType="int" resultType="confirmold">
		select pb.bnum,paymentbook_num,obsaleprice from
		(select bnum,paymentbook_num from paymentbook where bpaynum=#{bpaynum})pb,
		(select obsaleprice,obnum from oldbooks )ob
		where pb.bnum=ob.obnum
	</select>
	<!-- 수수료테이블에서 최근수수료 가져옴 -->
	<select id="getfee" resultType="int">
	select aa.fee from 
		(select a.*,rownum rnum from
			(select fee from fee order by feedate desc)a
		)aa
	where aa.rnum=1	
	</select>

	<insert id="insertComple" parameterType="hashmap">
		insert into obcomplete values(SEQ_obcomplete_obcnum.nextval,#{fprice},#{feeper},#{feepay},#{settlement},sysdate,0,#{paymentbook_num})
	
	</insert>
	
</mapper>