<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhta.yr.mybatis.mapper.UsedBookSellerMapper">

	<resultMap type = "com.jhta.finalproject.yr.vo.UsedOldBookSellerInfoVo" id = "uosellerinfovo">
		<result property="borderdate" column="borderdate"/>
		<result property="bpaydate" column="bpaydate"/>
		<result property="bpaynum" column="bpaynum"/>
		<result property="fprice" column="fprice"/>
		<result property="settlement" column="settlement"/>
		<result property="bocomstatus" column="bocomstatus"/>
		<result property="seller" column="seller"/>
		<result property="paymentbook_num" column="paymentbook_num"/>
		<result property="buyer" column="buyer"/>
		<result property="sellername" column="sellername"/>
		<result property="buyername" column="buyername"/>
		<collection property="obname" ofType = "string">
			<result property="obname" column="obname"/>		
		</collection>
	</resultMap>
	
	<sql id="search">
<!-- 	판매자, 구매자로 검색 -->
		<if test="@com.jhta.finalproject.yr.mybatischeck.MybatisCheck@notEmpty(pfield)">	
			<choose>
				<when test="pfield == 'sellername'">
					and members.mname like '%'||#{pkeyword}||'%'
				</when>
				<when test="pfield == 'mname'">
					and buyername like '%'||#{pkeyword}||'%'
				</when>
			</choose>
		</if>
		
<!-- 		구매일, 결제일로 검색 -->
		<if test="@com.jhta.finalproject.yr.mybatischeck.MybatisCheck@notEmpty(startDate)">
			 and TRUNC(${tfield}) BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
		</if>	
		
	</sql>

	<select id="getList" resultMap="uosellerinfovo" parameterType="hashmap">
		select * from(
			select aa.*, members.mname sellername, rownum rnm  from
			(
					select obcomplete.*, bpayment.mnum buyer, bpayment.*, oldbooks.obname, obseller.mnum seller, members.mname buyername from 
					paymentbook, obcomplete, bpayment, members, oldbooks, obseller
					where paymentbook.paymentbook_num = obcomplete.paymentbook_num
					and bpayment.bpaynum = paymentbook.bpaynum
					and bpayment.mnum = members.mnum
					and paymentbook.bnum = oldbooks.obnum
					and oldbooks.snum = obseller.snum
					order by obcomplete.bocomstatus, borderdate
					)aa, members
				where 
				aa.seller = members.mnum
				<include refid="search"/>	 
			)
		<![CDATA[where rnm >= #{startRow} and rnm <= #{endRow}]]>
	</select>
	
	<select id="getCount" resultType="int" parameterType="hashmap">
		select count(*) from(
			select aa.*, members.mname sellername, rownum rnm  from
				(
				select obcomplete.*, bpayment.mnum buyernum, bpayment.*, oldbooks.obname, obseller.mnum sellernum, members.mname buyername from 
				paymentbook, obcomplete, bpayment, members, oldbooks, obseller
				where paymentbook.paymentbook_num = obcomplete.paymentbook_num
				and bpayment.bpaynum = paymentbook.bpaynum
				and bpayment.mnum = members.mnum
				and paymentbook.bnum = oldbooks.obnum
				and oldbooks.snum = obseller.snum
				order by obcomplete.bocomstatus, borderdate
				)aa, members
			where 
			aa.sellernum = members.mnum 
			<include refid="search"/>	
		)
		
	</select>
	
	<update id="updateObcomplete" parameterType="int"> 
		update obcomplete set bocomstatus = 1, feedate = sysdate where paymentbook_num = #{paymentbook_num}
	</update>
	
	<insert id="insertDeposit" parameterType="depositVo">
		insert into deposit values (SEQ_DEPOSIT_DNUM.nextval, #{mnum}, #{bpaynum}, #{dtran}, sysdate, 0)
	</insert>

</mapper>	